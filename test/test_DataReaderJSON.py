# -*- coding: utf-8 -*-
import os
import pytest
from src.Types import DataType
from src.DataReaderJSON import DataReaderJSON


class TestDataReaderXML:
    @pytest.fixture()
    def file_and_data_content(self) -> tuple[str, DataType]:
        root_dir = os.path.dirname(os.path.abspath(__file__))
        file_path = f'{root_dir}/data_test.json'

        data = {
            'Иванов Иван Иванович': [('математика', 67.0),
                                     ('литература', 100.0),
                                     ('программирование', 91.0)],
            'Петров Петр Петрович': [('математика', 78.0),
                                     ('химия', 87.0),
                                     ('социология', 61.0)],
            'Сидоров Сидор Сидорович': [('математика', 90.0),
                                        ('физика', 85.0),
                                        ('биология', 75.0)],
            'Козлова Анна Игоревна': [('математика', 95.0),
                                      ('химия', 93.0),
                                      ('физика', 88.0)],
            'Смирнов Алексей Александрович': [('математика', 82.0),
                                              ('литература', 76.0),
                                              ('история', 89.0)],
            'Васильева Екатерина Викторовна': [('математика', 70.0),
                                               ('английский', 92.0),
                                               ('география', 84.0)],
            'Михайлов Дмитрий Петрович': [('математика', 88.0),
                                          ('биология', 79.0),
                                          ('история', 67.0)],
            'Кузнецова Ольга Сергеевна': [('математика', 75.0),
                                          ('социология', 72.0),
                                          ('английский', 91.0)],
            'Лебедев Артем Алексеевич': [('математика', 94.0),
                                         ('программирование', 96.0),
                                         ('физика', 87.0)],
            'Андреева Мария Андреевна': [('математика', 80.0),
                                         ('литература', 85.0),
                                         ('география', 73.0)],
            'Соколов Игорь Сергеевич': [('математика', 60.0),
                                        ('физика', 70.0),
                                        ('психология', 55.0)],
            'Попова Ольга Андреевна': [('математика', 85.0),
                                       ('химия', 92.0),
                                       ('геология', 78.0)],
            'Козлов Андрей Петрович': [('математика', 72.0),
                                       ('история', 65.0),
                                       ('философия', 70.0)],
            'Иванова Елена Игоревна': [('математика', 68.0),
                                       ('литература', 75.0),
                                       ('социология', 80.0)],
            'Морозов Павел Сергеевич': [('математика', 91.0),
                                        ('физика', 89.0),
                                        ('психология', 88.0)],
            'Сидорова Анна Александровна': [('математика', 77.0),
                                            ('химия', 85.0),
                                            ('география', 79.0)],
            'Петрова Ирина Сергеевна': [('математика', 84.0),
                                        ('программирование', 92.0),
                                        ('физика', 86.0)],
            'Ковалев Андрей Александрович': [('математика', 76.0),
                                             ('история', 72.0),
                                             ('философия', 75.0)],
            'Смирнова Екатерина Ивановна': [('математика', 79.0),
                                            ('английский', 90.0),
                                            ('геология', 83.0)]}

        return file_path, data

    def test_read(self, file_and_data_content: tuple[str, DataType]) -> None:
        file_content = DataReaderJSON().read(file_and_data_content[0])
        assert file_content == file_and_data_content[1]
